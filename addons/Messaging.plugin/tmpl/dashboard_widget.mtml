<mtapp:widget class="widget messaging-widget"
    label="Messaging"
    can_close="1">
    
    <style type="text/css">
        ul#messaging-public-timeline {
            height: 200px;
            overflow-y: auto;
            overflow-x: hidden;
        }
        li.message {
            clear: both;
            padding: 5px;
            background-color: #fff;
        }
        li.message.odd { background-color: #fff; }
        li.message.even { background-color: #f3f6f9; }

        .message .author {
            width: 40%;
            display: inline-block;
            padding: 0;
            color: #666;
        }
        .message .created {
            width: 60%;
            display: inline-block;
            text-align: right;
            color: #666;
        }
        
        input#message-text {
            margin-bottom: 5px;
            width: 100%;
            border: 1px solid #ccc;
        }
        span#message-text-counter { font-weight: bold; }
        div#message-post-spinner { display: none; }
        #post-message.disabled-button { background: #ccc; }
    </style>

    <h4>Public Timeline <a href="javascript:void(0);" id="update-public-timeline">(Update)</a></h4>
    <ul id="messaging-public-timeline">
    </ul>

    <h4>Post a Message</h4>
    <input type="text" name="message-text" id="message-text" maxlength="140">
    <div class="actions-bar">
        <div class="actions-bar-inner pkg actions">
            <button
                type="submit"
                class="primary-button"
                id="post-message">
                Post Message
            </button>
            <div id="message-post-spinner">
                <img src="<mt:StaticWebPath>images/indicator.white.gif" width="16" height="16" />
            </div>
            <div class="counter">Characters remaining: <span id="message-text-counter">140</span></div>
        </div>
    </div>

    <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.6.0/jquery.min.js"></script>
    <script type="text/javascript">
    jQuery(document).ready(function() {
        // Run when the page loads!
        update();

        // And when clicked!
        jQuery('#update-public-timeline').click(function(){
            update();
        });

        // When a status message is typed in, provide a character countdown.
        jQuery('input#message-text').keyup(function(){
            var num = 140 - jQuery('input#message-text').val().length;
            jQuery('#message-text-counter').text(num);

            if (num == -1) {
                alert('A maximum of 140 characters is allowed.');
            }
        });

        // Post a status message.
        jQuery('button#post-message').click(function(){
            if ( jQuery('input#message-text').val() == '' ) {
                alert('Enter a message before posting.');
                return false;
            }

            jQuery('button#post-message').addClass('disabled-button');
            jQuery('#message-post-spinner').show();
            jQuery('#message-text-counter').parent().hide();
            jQuery('button#post-message').attr('disabled','disabled');
            
            var msg = jQuery('input#message-text').val();
            jQuery.ajax({
                type: 'POST',
                url: '<mt:CGIPath><mt:Var name="config.MessagingScript">/statuses/update.json',
                dataType: 'json',
                data: "status=" + msg,
                headers: { 'Authorization': 'basic <mt:Var name="base64_author_credentials">' },
                success: status_response,
                error: status_response_error
            });
        });
    });
    
    function status_response_error(jqXHR,textStatus,error) {
        alert('Post failed! ' + error);
        jQuery('#message-post-spinner').hide();
        jQuery('#message-text-counter').parent().show();
        jQuery('button#post-message').removeClass('disabled-button');
        jQuery('button#post-message').removeAttr('disabled');
    }

    function status_response(data,textStatusjqXHR) {
        update();
        jQuery('input#message-text').val('');
        jQuery('#message-post-spinner').hide();
        jQuery('#message-text-counter').html('140');
        jQuery('#message-text-counter').parent().show();
        jQuery('button#post-message').removeClass('disabled-button');
        jQuery('button#post-message').removeAttr('disabled');
    }

    function update() {
        jQuery.ajax({
            type: 'POST',
            url: '<mt:CGIPath><mt:Var name="config.MessagingScript">/statuses/public_timeline.json', 
            success: parse_public_timeline
        });
    }
    function parse_public_timeline(data,textStatus,jqXHR) {
        // Convert the returned data into a JSON object
        //var json = eval('(' + data + ')');
        var json = eval( data );

        // Clear existing messages. This could be smarter and include only new 
        //messages, like twitter, but this just keeps it simple.
        jQuery('ul#messaging-public-timeline').html('');

        for (var i=0; i<json.statuses.status.length; i++) {
            var status = json.statuses.status[i];

            if (i % 2)
                var rowclass = 'odd';
            else
                var rowclass = 'even';

            jQuery('ul#messaging-public-timeline')
                .append(
                    jQuery('<li class="message ' + rowclass + '"></li>').html(
                        '<div class="text">' + status.text + '</div>'
                        + '<div class="author">' + status.user.name + '</div>'
                        + '<div class="created">' + status.created_at + '</div>'
                    )
                );
        }
    }
    </script>
</mtapp:widget>
